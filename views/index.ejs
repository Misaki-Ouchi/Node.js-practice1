<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>User list</title>
        <link rel="stylesheet" href="css/style.css">
    </head>
    <body>
        <input id="input" type="text" name="name">
        <button id="searchBtn">検索</button>
        <p><a href="/create">ユーザーの追加</a></p>
        <table id="selectedList">
            <tbody>
                <tr>
                    <td>選択された情報一覧</td>
                </tr>
            </tbody>
        </table>
        <div class="stats">
            <button onclick="genderStat()">gender</button>
            <button onclick="workStat()">workplace</button>
            <button onclick="houseStat()">household</button>
            <p>統計結果：<span id="statsResult"></span></p>
        </div>
        <table id="personasList">
            <tbody>
                <% for(let i=0; i < personas.length; i++) { %>
                    <tr>
                        <td>
                            <%= personas[i].name %>
                        </td>
                        <td>
                            <%= personas[i].email %>
                        </td>
                        <td><a href="/edit/<%= personas[i].id%>">更新</a></td>
                        <td><a href="/delete/<%= personas[i].id%>">削除</a></td>
                        <td><button class="selectBtn">選択</button></td>
                    </tr>
                    <% } %>
            </tbody>
        </table>
        <script type="text/javascript">
            let personas = JSON.parse('<%= JSON.stringify(personas) %>'.replace(/&#34;/g, '"'));
            let body = document.querySelector('body');
            body.insertAdjacentHTML('beforeend', `<ul></ul>`);
            let input = document.querySelector('#input');
            let searchBtn = document.querySelector('#searchBtn');
            let trs1 = document.querySelectorAll('#personasList tr');
            // 課題01 nameで絞り込み
            function searchName() {
                for (let i = 0; i < personas.length; i++) {
                    if (personas[i].name.indexOf(input.value) === -1) {
                        trs1[i].remove();
                    }
                }
            }
            searchBtn.addEventListener('click', searchName);

            // 課題02 選択ボタンで格納
            let selectedList = document.querySelector('#selectedList tbody');
            for (let i = 0; i < personas.length; i++) {
                let selectBtn = document.querySelectorAll('.selectBtn');
                selectBtn[i].addEventListener('click', function () {
                    selectedList.insertAdjacentElement('beforeend', trs1[i]);
                })
            }

            // 課題03 統計結果
            let statsResult = document.querySelector('#statsResult');
            // 男女の人数
            function genderStat() {
                let men = 0;
                let women = 0;
                for (let i = 0; i < personas.length; i++) {
                    if (personas[i].gender === '男性') {
                        men++;
                    } else if (personas[i].gender === '女性') {
                        women++;
                    }
                }
                statsResult.innerHTML = `<br>男性：${men}人　女性：${women}人`;
            }
            // 就業場所
            function workStat() {
                let place = [
                    { pref: "北海道", count: 0 },
                    { pref: "青森", count: 0 },
                    { pref: "岩手", count: 0 },
                    { pref: "宮城", count: 0 },
                    { pref: "秋田", count: 0 },
                    { pref: "山形", count: 0 },
                    { pref: "福島", count: 0 },
                    { pref: "茨城", count: 0 },
                    { pref: "栃木", count: 0 },
                    { pref: "群馬", count: 0 },
                    { pref: "埼玉", count: 0 },
                    { pref: "千葉", count: 0 },
                    { pref: "東京", count: 0 },
                    { pref: "神奈川", count: 0 },
                    { pref: "新潟", count: 0 },
                    { pref: "富山", count: 0 },
                    { pref: "石川", count: 0 },
                    { pref: "福井", count: 0 },
                    { pref: "山梨", count: 0 },
                    { pref: "長野", count: 0 },
                    { pref: "岐阜", count: 0 },
                    { pref: "静岡", count: 0 },
                    { pref: "愛知", count: 0 },
                    { pref: "三重", count: 0 },
                    { pref: "滋賀", count: 0 },
                    { pref: "京都", count: 0 },
                    { pref: "大阪", count: 0 },
                    { pref: "兵庫", count: 0 },
                    { pref: "奈良", count: 0 },
                    { pref: "和歌山", count: 0 },
                    { pref: "鳥取", count: 0 },
                    { pref: "島根", count: 0 },
                    { pref: "岡山", count: 0 },
                    { pref: "広島", count: 0 },
                    { pref: "山口", count: 0 },
                    { pref: "徳島", count: 0 },
                    { pref: "香川", count: 0 },
                    { pref: "愛媛", count: 0 },
                    { pref: "高知", count: 0 },
                    { pref: "福岡", count: 0 },
                    { pref: "佐賀", count: 0 },
                    { pref: "長崎", count: 0 },
                    { pref: "熊本", count: 0 },
                    { pref: "大分", count: 0 },
                    { pref: "宮崎", count: 0 },
                    { pref: "鹿児島", count: 0 },
                    { pref: "沖縄", count: 0 }
                ];
                // newListにpersonas入れる
                let newList = personas;
                statsResult.innerHTML = "";
                console.log(newList);
                for (let i = 0; i < place.length; i++) {
                    for (let j = 0; j < newList.length; j++) {
                        if (newList[j].workplace === place[i].pref) {
                            place[i].count++;
                            // countが終わった人をリストから外す
                            newList.splice(j, 1);
                            console.log(newList);
                        }
                    }
                    statsResult.insertAdjacentHTML('beforeend', `<br>${place[i].pref}：${place[i].count}人`);
                }
                // ↑↓リファクタリング：trueの人をリストから外す→ループが短くなる
            }
            // 世帯の人数
            function houseStat() {
                statsResult.innerHTML = "";
                let houseList = [{ household: 1, count: 0 }, { household: 2, count: 0 }, { household: 3, count: 0 }, { household: 4, count: 0 }, { household: 5, count: 0 }, { household: 6, count: 0 }];
                for (let i = 0; i < houseList.length; i++) {
                    for (let j = 0; j < personas.length; j++) {
                        if (personas[j].household === houseList[i].household) {
                            houseList[i].count++;
                        }
                    }
                    statsResult.insertAdjacentHTML('beforeend', `<br>世帯人数${houseList[i].household}人：${houseList[i].count}世帯`);
                }
            }

        </script>
    </body>
</html>
